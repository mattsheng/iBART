% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/iBART.R
\name{iBART}
\alias{iBART}
\title{iBART descriptor selection}
\usage{
iBART(
  X = NULL,
  y = NULL,
  head = NULL,
  dimen = NULL,
  num_trees = 20,
  num_burn_in = 10000,
  num_iterations_after_burn_in = 5000,
  num_reps_for_avg = 10,
  num_permute_samples = 50,
  opt = 2,
  sin_cos = FALSE,
  apply_pos_opt_on_neg_x = TRUE,
  iter = 3L,
  out_sample = FALSE,
  train_ratio = 1L,
  Lzero = TRUE,
  K = ifelse(Lzero, 5L, 0L),
  AIC = FALSE,
  standardize = TRUE,
  writeLog = FALSE,
  count = NULL,
  seed = NULL
)
}
\arguments{
\item{X}{Input matrix of primary features \eqn{X}.}

\item{y}{Response variable \eqn{y}.}

\item{head}{Optional: name of primary features.}

\item{dimen}{Optional: units and their respective dimensions of primary features. This is used to perform dimension analysis for generated descriptors to avoid generating unphyiscal descriptors, such as \eqn{size + size^2}. See \code{generate_dimension()} for details.}

\item{num_trees}{BART parameter: number of trees to be grown in the sum-of-trees model. If you want different values for each iteration of BART, input a vector of length equal to number of iterations. Default is \code{num_trees = 20}.}

\item{num_burn_in}{BART parameter: number of MCMC samples to be discarded as ``burn-in". If you want different values for each iteration of BART, input a vector of length equal to number of iterations. Default is \code{num_burn_in = 10000}.}

\item{num_iterations_after_burn_in}{BART parameter: number of MCMC samples to draw from the posterior distribution of \eqn{hat{f}(x)}. If you want different values for each iteration of BART, input a vector of length equal to number of iterations. Default is \code{num_iterations_after_burn_in = 5000}.}

\item{num_reps_for_avg}{BART parameter: number of replicates to over over to for the BART model's variable inclusion proportions. If you want different values for each iteration of BART, input a vector of length equal to number of iterations. Default is \code{num_reps_for_avg = 10}.}

\item{num_permute_samples}{BART parameter: number of permutations of the response to be made to generate the “null” permutation distribution. If you want different values for each iteration of BART, input a vector of length equal to number of iterations. Default is \code{num_permute_samples = 50}.}

\item{opt}{If \code{opt = 1}, uniary operators are applied first. If \code{opt = 2}, binary operators are applied first. Default is \code{opt = 2}.}

\item{sin_cos}{Logical flag for using \eqn{sin(\pi*x)} and \eqn{cos(\pi*x)} to generate descriptors. This is useful if you think there is periodic relationship between predictors and response. Default is \code{sin_cos = FALSE}.}

\item{apply_pos_opt_on_neg_x}{Logical flag for applying non-negative-valued operators, such as \eqn{\sqrt x} and \eqn{log(x)}, when some values of \eqn{x} is negative. If \code{apply_pos_opt_on_neg_x == TRUE}, apply absolute value operator first then non-negative-valued operator, i.e. generate \eqn{\sqrt |x|} and \eqn{log(|x|)} instead. Default is \code{apply_pos_opt_on_neg_x = TRUE}.}

\item{iter}{Number of iterations. Default is \code{iter = 3}.}

\item{out_sample}{Logical flag for out of sample assessment. Default is \code{out_sample = FALSE}.}

\item{train_ratio}{Proportion of data used to train model. Value must be between (0,1]. This is only needed when \code{out_sample = TRUE}. Default is \code{train_ratio = 1}.}

\item{Lzero}{Logical flag for L-zero variable selection. Default is \code{Lzero = TRUE}.}

\item{K}{If \code{Lzero == TRUE}, \code{K} sets the maximum number of descriptors to be selected.}

\item{AIC}{If \code{Lzero == TRUE}, logical flag for selecting best number of descriptors using AIC. Possible number of descriptors are \eqn{1 \le k \le K}.}

\item{standardize}{Logical flag for data standardization prior to model fitting in BART and LASSO. Default is \code{standardize = TRUE}.}

\item{writeLog}{Logical flag for writing log file. The log file will contain information such as the descriptors selected by iBART, RMSE of the linear model build on the selected descriptors, etc. Default is \code{writeLog = FALSE}.}

\item{count}{Internal parameter. Default is \code{count = NULL}.}

\item{seed}{Optional: sets the seed in both R and Java. Default is \code{seed = NULL} which does not set the seed in R nor Java.}
}
\value{
A list of iBART output. \item{X_selected}{The values of the iBART selected descriptors.}
\item{descriptor_names}{The names of the iBART selected descriptors.}
\item{iBART_gen_size}{The number of descriptors generated by iBART in each iteration.}
\item{iBART_sel_size}{The number of descriptors selected by iBART in each iteration.}
\item{LASSO_model}{The LASSO output of the last iteration of iBART. The predictors with non-zero coefficient are called the iBART selected descriptors.}
\item{LASSO_in_sample_RMSE}{In sample RMSE of the LASSO model.}
\item{LASSO_out_sample_RMSE}{Out of sample RMSE of the LASSO model if \code{out_sample == TRUE}.}
\item{LS_model}{The least squares model fitted on the iBART selected descriptors.}
\item{LS_in_sample_RMSE}{In sample RMSE of the least square estimators on the iBART selected descriptors.}
\item{LS_out_sample_RMSE}{Out of sample RMSE of the least square estimators on the iBART selected descriptors if \code{out_sample == TRUE}.}
\item{Lzero_model}{The \eqn{l_0}-penalized regression model fitted on the iBART selected descriptors for \eqn{1 \le k \le K}.}
\item{Lzero_names}{The best \eqn{k}D descriptors selected by the \eqn{l_0}-penalized regression model for \eqn{1 \le k \le K}.}
\item{Lzero_in_sample_RMSE}{In sample RMSE of the \eqn{l_0}-penalized regression model for \eqn{1 \le k \le K}.}
\item{Lzero_out_sample_RMSE}{Out of sample RMSE of the \eqn{l_0}-penalized regression model for \eqn{1 \le k \le K} if \code{out_sample == TRUE}.}
\item{Lzero_aic_model}{The best \eqn{l_0}-penalized regression model selected by AIC.}
\item{Lzero_aic_names}{The best \eqn{k}D descriptors where \eqn{1 \le k \le K} is chosen via AIC.}
}
\description{
iBART descriptor selection
}
